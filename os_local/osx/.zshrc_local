#.zshrc_local

# Alias
alias vi='/Applications/MacVim.app/Contents/MacOS/Vim -u NONE -U NONE --noplugin "$@"'
alias vim='/Applications/MacVim.app/Contents/MacOS/Vim "$@"'
alias vimdiff='/Applications/MacVim.app/Contents/MacOS/Vim -d "$@"'
alias mvimdiff='/Applications/MacVim.app/Contents/MacOS/mvimdiff "$@"'

alias updatedb='sudo /usr/libexec/locate.updatedb'
#alias updatedb="sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist"
alias chrome='open -a Google\ Chrome'
alias xcode='open -a /Applications/Xcode.app/Contents/MacOS/Xcode'
alias ios_sim='open -a /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app'
alias android_sim='open -a ~/Applications/Genymotion.app'
alias createTags='~/repos/github.com/bundai223/codepocket/shell/mac/create_ctags.sh'
alias startup='open -a startup'

alias -s xcodeproj=xcode

#alias rm='~/tool/osx-mv2trash/bin/mv2trash'
#alias rm-vimbackup='find **/*~| xargs ~/tool/osx-mv2trash/bin/mv2trash'

alias eclipse_clean='/Applications/eclipse/Eclipse.app/Contents/MacOS/eclipse -clean'

# ref) http://tukaikta.blog135.fc2.com/blog-entry-228.html
# refresh memory
alias refmem='refresh_memory &>/dev/null &'

refresh_memory()
{
    du -sx / &> /dev/null & sleep 25 && kill $!
}

# android
SCREENSHOT_DIR='~/Desktop'
alias adb='adbp'
alias pidcat='pidcatp'
alias restart-adb='adbp kill-server; adbp start-server'
alias uninstallapp='adbp shell pm list package | sed -e s/package:// | peco | xargs adbp uninstall'
alias installapp='find ./ -name "*.apk" | peco | xargs adbp install -r'
alias screenshot='screenshot2 $SCREENSHOT_DIR/screenshot.png; open $SCREENSHOT_DIR/screenshot.png'

function peco_work() {
    target=`find ~/work -maxdepth 2 -mindepth 1 -type d | peco`
    echo $target
    cd $target
}

function install_font() {
    cp $1 ~/Library/Fonts/
}

# 
# guiのvimを開く関数
# ウインドウは一つしか開かない設定で起動
# - or +で始まる引数をもっていたら引数任せ
# 
function mvim() {
    if [[ -z $1 || $1 =~ "^[-+]" ]]; then
        /Applications/MacVim.app/Contents/MacOS/mvim $*
    else
        /Applications/MacVim.app/Contents/MacOS/mvim --remote-tab-silent $*
    fi
}

function genymotion_peco() {
    if [ -z "$GENYMOTION_APP_HOME" ]
    then
        echo "GENYMOTION_APP_HOME is empty. Use '/Applications/Genymotion.app/' instead this time."
        player="/Applications/Genymotion.app/Contents/MacOS/player" 
    else
        player="$GENYMOTION_APP_HOME/Contents/MacOS/player" 
    fi
    vm_name=`VBoxManage list vms | peco` 
    if [[ $vm_name =~ ^\"(.+)\".* ]]
    then
        name=${match[1]} 
        echo "boot $name"
        $player --vm-name "$name" &
    fi
}

function show_allfile_on_finder() {
    flag="$1"
    if [ "on" = $flag ]; then
        echo "Enable show all files on finder."
        defaults write com.apple.finder AppleShowAllFiles -boolean true
        killall Finder
    elif [ "off" = $flag ]; then
        echo "Reset show all files on finder."
        defaults delete com.apple.finder AppleShowAllFiles
        killall Finder
    else
        echo "usage:"
        echo "    show_allfile_on_finder [on|off]"
    fi
}
